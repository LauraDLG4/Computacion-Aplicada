import math

# def f(x):
#     f=math.exp(x**2)
#     return f

# def f(x):
#     f=1+((math.exp(-x))*(math.sin(4*x)))
#     return f
# 
# def f(x):
#     f=math.sin(math.pi*x)
#     return f
# 
# def f(x):
#     f=1+((math.exp(-x))*(math.cos(4*x)))
#     return f

def f(x):
    f=(math.sin(math.sqrt(x)))
    return f

def trapecio(a,b,n):
    h=(b-a)/n
    s=f(a)+f(b)
    for k in range (1,n):
        s= s+ 2*f(a+k*h)
    s*=(h/2)
    return s

def simpson13(a,b,n):
    h=(b-a)/n
    s=f(a)+f(b)
    for k in range (1,n):
        if k%2==0:
            s+=2*f(a+k*h)
        else:
            s+=4*f(a+k*h)
    s*=(h/3)
    return s

def simpson38(a,b,n):
    h=(b-a)/n
    s=f(a)+f(b)
    for k in range (1,n):
        if k%3!=0:
            s+=3*f(a+k*h)
        else:
            s+=2*f(a+k*h)
    s*=(3*h/8)
    return s

def main():
    a=float(input("Introduzca límite inferior de integración: "))
    b=float(input("Introduzca el límite superior de integración: "))
    n=int(input("Introduzca el número de subdivisiones: "))
    s=trapecio(a,b,n)
    print("Valor de la integración numérica por Trapecio Compuesto: ", s)
    s=simpson13(a,b,n)
    print("Valor de la integración numérica por Simpson 1/3 Compuesto: ", s)
    s=simpson38(a,b,n)
    print("Valor de la integración numérica por Simpson 3/8 Compuesto: ", s)
    
main()
